name: terraform-worfklow

on:
  push:
    branches:
    - main
    - staging
    - develop
    paths:
    - '**'
    - '!.github/params/**'
    - '!.github/scripts/**'
    - '!.github/workflows/**'

jobs:
  init:
    name: Initialization
    runs-on: ubuntu-latest
    outputs:
      threads: ${{ steps.settings.outputs.threads }}

      dir_list_dev: ${{ steps.settings.outputs.dir_list_dev }}
      dir_list_test: ${{ steps.settings.outputs.dir_list_test }}
      dir_list_prod: ${{ steps.settings.outputs.dir_list_prod }}

      execute_check_and_format: ${{ steps.settings.outputs.execute_check_and_format }}
      execute_test: ${{ steps.settings.outputs.execute_test }}
      execute_deploy: ${{ steps.settings.outputs.execute_deploy }}

      sha7: ${{ steps.settings.outputs.sha7 }}
      git_branch: ${{ steps.settings.outputs.git_branch }}
      tmp_git_branch: ${{ steps.settings.outputs.tmp_git_branch }}
      cache_key: ${{ steps.settings.outputs.cache_key }}

      state_gcp_bucket: ${{ steps.settings.outputs.state_gcp_bucket }}
      workloadidentity_provider_test: ${{ steps.settings.outputs.workloadidentity_provider_test }}
      workloadidentity_provider_prod: ${{ steps.settings.outputs.workloadidentity_provider_prod }}
      token_format_test: ${{ steps.settings.outputs.token_format_test }}
      token_format_prod: ${{ steps.settings.outputs.token_format_prod }}
      access_token_lifetime: ${{ steps.settings.outputs.access_token_lifetime }}
    defaults:
      run:
        shell: bash
        working-directory: .
    env:
      GITHUB_WORKSPACE: ${{ github.workspace }}
    steps:
      - name: Checkout
        id: checkout
        uses: actions/checkout@v3
        with:
          path: sources/
          submodules: true
      - name: Define settings
        id: settings
        env:
          GITHUB_REF: ${{ github.ref }} 
          GITHUB_SHA: ${{ github.sha }}
          WORKFLOW_NAME: "terraform"
        run: |
          ${{ env.GITHUB_WORKSPACE }}/sources/.github/scripts/common_init_settings_define.sh
      - name: Cache
        id: cache
        uses: actions/cache@v3
        with:
          path: sources/
          key: ${{ steps.settings.outputs.cache_key }}

  dev-check:
    name: Check directories
    needs: [init]
    runs-on: ubuntu-latest
    if: needs.init.outputs.execute_check_and_format == '1'
    environment: development
    strategy:
      fail-fast: false
      max-parallel: ${{ fromJson(needs.init.outputs.threads) }}
      matrix:
        directory: ${{ fromJson(needs.init.outputs.dir_list_dev) }}
    defaults:
      run:
        shell: bash
        working-directory: sources/${{ matrix.directory }}
    env:
      GITHUB_WORKSPACE: ${{ github.workspace }}
    steps:
      - name: Cache
        id: cache
        env:
          CACHE_KEY: ${{ needs.init.outputs.cache_key }}
        uses: actions/cache@v3
        with:
          path: sources/
          key: ${{ env.CACHE_KEY }}
      - name: Configure SSH
        id: ssh
        if: env.SSH_PRIVATE_KEY
        env:
          GITHUB_REPOSITORY: ${{ github.repository }}
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        run: |
          ${{ env.GITHUB_WORKSPACE }}/sources/.github/scripts/common_ssh_configure.sh
      - name: Terraform check code
        id: check
        run: |
          ${{ env.GITHUB_WORKSPACE }}/sources/.github/scripts/terraform_check.sh

  dev-fmt:
    name: Format directories
    needs: [init, dev-check]
    runs-on: ubuntu-latest
    if: needs.init.outputs.execute_check_and_format == '1'
    environment: development
    strategy:
      fail-fast: false
      max-parallel: ${{ fromJson(needs.init.outputs.threads) }}
      matrix:
        directory: ${{ fromJson(needs.init.outputs.dir_list_dev) }}
    defaults:
      run:
        shell: bash
        working-directory: sources/${{ matrix.directory }}
    env:
      GITHUB_WORKSPACE: ${{ github.workspace }}
    steps:
      - name: Setup Terraform
        id: setup
        uses: hashicorp/setup-terraform@v2
      - name: Set up Cloud SDK
        id: gcloud
        uses: google-github-actions/setup-gcloud@v0
      - name: Cache
        id: cache
        env:
          CACHE_KEY: ${{ needs.init.outputs.cache_key }}
        uses: actions/cache@v3
        with:
          path: sources/
          key: ${{ env.CACHE_KEY }}
      - name: Configure SSH
        id: ssh
        if: env.SSH_PRIVATE_KEY
        env:
          GITHUB_REPOSITORY: ${{ github.repository }}
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        run: |
          ${{ env.GITHUB_WORKSPACE }}/sources/.github/scripts/common_ssh_configure.sh
      - name: Terraform format code
        id: format
        env:
          GITHUB_REPOSITORY: ${{ github.repository }}
          BRANCH_NAME: ${{ needs.init.outputs.tmp_git_branch }}
          WORKING_DIRECTORY: ${{ matrix.directory }}
        run: |
          ${{ env.GITHUB_WORKSPACE }}/sources/.github/scripts/terraform_fmt.sh

  dev-pull-diff:
    name: Pull formatted code
    needs: [init, dev-fmt]
    runs-on: ubuntu-latest
    if: needs.init.outputs.execute_check_and_format == '1'
    environment: development
    outputs:
      pull_request_opened: ${{ steps.pull-code.outputs.pull_request_opened }}
    defaults:
      run:
        shell: bash
        working-directory: .
    env:
      GITHUB_WORKSPACE: ${{ github.workspace }}
    permissions:
      contents: write
      pull-requests: write
    steps:
      - name: Cache
        id: cache
        env:
          CACHE_KEY: ${{ needs.init.outputs.cache_key }}
        uses: actions/cache@v3
        with:
          path: sources/
          key: ${{ env.CACHE_KEY }}
      - name: Configure SSH
        id: ssh
        if: env.SSH_PRIVATE_KEY
        env:
          GITHUB_REPOSITORY: ${{ github.repository }}
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        run: |
          ${{ env.GITHUB_WORKSPACE }}/sources/.github/scripts/common_ssh_configure.sh
      - name: Prepare pull
        id: pull
        env:
          BRANCH_NAME: ${{ needs.init.outputs.tmp_git_branch }}
          GITHUB_REPOSITORY: ${{ github.repository }}
        run: |
          ${{ env.GITHUB_WORKSPACE }}/sources/.github/scripts/common_pull_prepare.sh
      - name: Create pull request
        id: create-pr
        env:
          GITHUB_REPOSITORY: ${{ github.repository }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          BASE_BRANCH_NAME: ${{ needs.init.outputs.git_branch }}
          BRANCH_NAME: ${{ needs.init.outputs.tmp_git_branch }}
          TITLE: 'Workflow - Terraform'
          BODY: 'Update terraform files to canonical format using `terraform fmt` from the ${{ needs.init.outputs.sha7 }} commit'
        run: |
          ${{ env.GITHUB_WORKSPACE }}/sources/.github/scripts/common_pull_create.sh
      - name: Close pull
        id: pull-code
        env:
          BRANCH_NAME: ${{ needs.init.outputs.tmp_git_branch }}
          GITHUB_REPOSITORY: ${{ github.repository }}
          PR_URL: ${{ steps.create-pr.outputs.pr_url }}
          PR_NUMBER: ${{ steps.create-pr.outputs.pr_number }}
        run: |
          ${{ env.GITHUB_WORKSPACE }}/sources/.github/scripts/common_pull_close.sh

  test-stagging:
    name: Test on stagging
    needs: [init, dev-pull-diff]
    runs-on: ubuntu-latest
    if: ${{ (needs.init.outputs.execute_test == '1') && (needs.dev-pull-diff.outputs.pull_request_opened == '0')Â }}
    environment: testing
    strategy:
      fail-fast: false
      max-parallel: ${{ fromJson(needs.init.outputs.threads) }}
      matrix:
        directory: ${{ fromJson(needs.init.outputs.dir_list_test) }}
    defaults:
      run:
        shell: bash
        working-directory: sources/${{ matrix.directory }}
    env:
      GITHUB_WORKSPACE: ${{ github.workspace }}
    steps:
      - name: Setup Terraform
        id: setup
        uses: hashicorp/setup-terraform@v2
      - name: Set up Cloud SDK
        id: gcloud
        uses: google-github-actions/setup-gcloud@v0
      - name: Authenticate Google
        id: auth
        env:
          SERVICE_ACCOUNT: ${{ secrets.SERVICEACCOUNT_TEST }}
          SERVICE_ACCOUNT_KEY: ${{ secrets.SERVICE_ACCOUNT_KEY }}
          WORKLOADIDENTITY_PROJECTNUMBER: ${{ secrets.WORKLOADIDENTITY_PROJECTNUMBER }}
          TOKEN_FORMAT:  ${{ needs.init.outputs.token_format_test }}
          ACCESS_TOKEN_LIFETIME:  ${{ needs.init.outputs.access_token_lifetime }}
          WORKLOADIDENTITY_PROVIDER: ${{ needs.init.outputs.workloadidentity_provider_test }}
        uses: google-github-actions/auth@v0
        with:
          token_format: ${{ env.TOKEN_FORMAT }}
          workload_identity_provider: projects/${{ env.WORKLOADIDENTITY_PROJECTNUMBER }}/locations/global/workloadIdentityPools/${{ env.WORKLOADIDENTITY_PROVIDER }}
          service_account: ${{ env.SERVICE_ACCOUNT }}
          access_token_lifetime: ${{ env.ACCESS_TOKEN_LIFETIME }}
          credentials_json: ${{ env.SERVICE_ACCOUNT_KEY }}
      - name: Cache
        id: cache
        env:
          CACHE_KEY: ${{ needs.init.outputs.cache_key }}
        uses: actions/cache@v3
        with:
          path: sources/
          key: ${{ env.CACHE_KEY }}
      - name: Configure SSH
        id: ssh
        if: env.SSH_PRIVATE_KEY
        env:
          GITHUB_REPOSITORY: ${{ github.repository }}
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        run: |
          ${{ env.GITHUB_WORKSPACE }}/sources/.github/scripts/common_ssh_configure.sh
      - name: Deploy on test
        id: deploy
        env:
          STATE_GCP_BUCKET: ${{ needs.init.outputs.state_gcp_bucket }}
          SUFFIX_NAME: ${{ needs.init.outputs.sha7 }}
          GITHUB_REPOSITORY: ${{ github.repository }}
          WORKING_DIRECTORY: ${{ matrix.directory }}
        run: |
          echo ${{ env.GITHUB_WORKSPACE }}/sources/.github/scripts/terraform_deploy.sh
      - name: Clean environment
        id: clean
        env:
          IDENTITY_FEDERATION_PROJECT_NUMBER: ${{ secrets.identity_federation_project_number }}
          IDENTITY_FEDERATION_POOL: ${{ secrets.identity_federation_pool }}
          IDENTITY_FEDERATION_PROVIDER: ${{ secrets.identity_federation_provider }}
          GCP_BUCKET_REPOSITORY: ${{ secrets.gcp_bucket_repository }}
          SUFFIX_NAME: ${{ needs.init.outputs.sha7 }}
        if: always()
        run: |
          echo ${{ env.GITHUB_WORKSPACE }}/sources/.github/scripts/terraform_clean.sh

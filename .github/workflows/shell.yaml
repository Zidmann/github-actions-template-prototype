name: shell-worfklow

on:
  push:
    branches:
    - main
    - staging
    - develop
    paths:
    - "**"
    - "!.github/params/**"
    - "!.github/scripts/**"
    - "!.github/workflows/**"

jobs:
  init:
    name: Initialization
    runs-on: ubuntu-latest
    outputs:
      threads: ${{ steps.init.outputs.threads }}

      dir_list_dev: ${{ steps.init.outputs.dir_list_dev }}
      dir_list_test: ${{ steps.init.outputs.dir_list_test }}
      dir_list_prod: ${{ steps.init.outputs.dir_list_prod }}

      execute_check_and_format: ${{ steps.init.outputs.execute_check_and_format }}
      execute_test: ${{ steps.init.outputs.execute_test }}
      execute_deploy: ${{ steps.init.outputs.execute_deploy }}

      sha7: ${{ steps.init.outputs.sha7 }}
      cache_key: ${{ steps.init.outputs.cache_key }}
    steps:
      - name: Checkout
        id: checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          path: "sources/"
          submodules: true
      - name: Init
        id: init
        uses: Zidmann/github-actions-template-prototype/ga-init@main
        with:
          workflow_name: "shell"
          env_path: "sources/.github/params/shell.env"
      - name: Cache
        id: cache
        uses: actions/cache@v3
        with:
          path: "sources/"
          key: "${{ steps.init.outputs.cache_key }}"

  dev-check:
    name: Check directories
    needs: [init]
    runs-on: ubuntu-latest
    if: needs.init.outputs.execute_check_and_format == '1'
    environment: development
    strategy:
      fail-fast: false
      max-parallel: ${{ fromJson(needs.init.outputs.threads) }}
      matrix:
        directory: ${{ fromJson(needs.init.outputs.dir_list_dev) }}
    steps:
      - name: Cache
        id: cache
        env:
          CACHE_KEY: ${{ needs.init.outputs.cache_key }}
        uses: actions/cache@v3
        with:
          path: sources/
          key: ${{ env.CACHE_KEY }}
      - name: Shell check code
        id: check
        uses: Zidmann/github-actions-template-prototype/ga-shell-check@main
        with:
          working_directory: "sources/${{ matrix.directory }}"

  test-stagging:
    name: Test on stagging
    needs: [init, dev-check]
    runs-on: ubuntu-latest
    if: ${{ (needs.init.outputs.execute_test == '1') && (needs.dev-pr-diff.outputs.pull_request_opened == '0') }}
    environment: testing
    strategy:
      fail-fast: false
      max-parallel: ${{ fromJson(needs.init.outputs.threads) }}
      matrix:
        directory: ${{ fromJson(needs.init.outputs.dir_list_test) }}
    env:
      GITHUB_WORKSPACE: ${{ github.workspace }}
    steps:
      - name: Cache
        id: cache
        env:
          CACHE_KEY: ${{ needs.init.outputs.cache_key }}
        uses: actions/cache@v3
        with:
          path: sources/
          key: ${{ env.CACHE_KEY }}

  deploy-production:
    name: Deploy on production
    needs: [init, test-stagging]
    runs-on: ubuntu-latest
    if: ${{ (needs.init.outputs.execute_deploy == '1') && (needs.dev-pr-diff.outputs.pull_request_opened == '0') }}
    environment: production
    strategy:
      fail-fast: false
      max-parallel: ${{ fromJson(needs.init.outputs.threads) }}
      matrix:
        directory: ${{ fromJson(needs.init.outputs.dir_list_prod) }}
    env:
      GITHUB_WORKSPACE: ${{ github.workspace }}
    steps:
      - name: Cache
        id: cache
        env:
          CACHE_KEY: ${{ needs.init.outputs.cache_key }}
        uses: actions/cache@v3
        with:
          path: sources/
          key: ${{ env.CACHE_KEY }}
      - name: Build a package
        id: build
        uses: Zidmann/github-actions-template-prototype/ga-build-package@main
        with:
          package_filename: "TEST.deb"
          package_version: "1.0.0"
          package_type: "DEB"
          working_directory: "sources/${{ matrix.directory }}"

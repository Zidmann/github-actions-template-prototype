42424242424242424242424242
    - name: Authentifcate Google
      id: auth
      uses: google-github-actions/auth@v0
      with:
        credentials_json: ${{ secrets.SA_KEY }}
        service_account: ${{ secrets.SA_EMAIL }}


    # Add "id-token" with the intended permissions.
    permissions:
      contents: 'read'
      id-token: 'write'
[...]
    - id: 'auth'
      name: 'Authenticate to Google Cloud'
      uses: 'google-github-actions/auth@v0'
      with:
        token_format: 'access_token' # <--
        workload_identity_provider: 'projects/123456789/locations/global/workloadIdentityPools/my-pool/providers/my-provider'
        service_account: 'my-service-account@my-project.iam.gserviceaccount.com'
        access_token_lifetime: '900s'


https://stackoverflow.com/questions/70695134/terraform-using-var-file-and-also-var
	terraform apply -var-file="/path/variablefile.tfvars"

  test-stagging:
    name: Test on stagging
    needs: [init, dev-pull-diff]
    runs-on: ubuntu-latest
    if: ${{ (needs.init.outputs.execute_test == '1') && (needs.dev-pull-diff.outputs.pull_request_opened == '0') }}
    environment: testing
    strategy:
      fail-fast: false
      max-parallel: ${{ fromJson(needs.init.outputs.threads) }}
      matrix:
        directory: ${{ fromJson(needs.init.outputs.dir_list_test) }}
    defaults:
      run:
        shell: bash
        working-directory: sources/${{ matrix.directory }}
    env:
      GITHUB_WORKSPACE: ${{ github.workspace }}
    steps:
      - name: Setup Terraform
        id: setup
        uses: hashicorp/setup-terraform@v2
      - name: Set up Cloud SDK
        id: gcloud
        uses: google-github-actions/setup-gcloud@v0
      - name: Authenticate Google
        id: auth
        env:
          WORKLOADIDENTITY_PROJECTNUMBER: ${{ needs.init.outputs.workloadidentity_projectnumber }}
          WORKLOADIDENTITY_PROVIDER: ${{ needs.init.outputs.workloadidentity_provider_test }}
          SERVICEACCOUNT: ${{ needs.init.outputs.serviceaccount_test }}
        uses: google-github-actions/auth@v0
        with:
          token_format: "access_token"
          workload_identity_provider: projects/${{ env.WORKLOADIDENTITY_PROJECTNUMBER }}/locations/global/workloadIdentityPools/${{ env.WORKLOADIDENTITY_PROVIDER }}
          service_account: ${{ env.SERVICEACCOUNT }}
      - name: Cache
        id: cache
        env:
          CACHE_KEY: ${{ needs.init.outputs.cache_key }}
        uses: actions/cache@v3
        with:
          path: sources/
          key: ${{ env.CACHE_KEY }}
      - name: Configure SSH
        id: ssh
        if: env.SSH_PRIVATE_KEY
        env:
          GITHUB_REPOSITORY: ${{ github.repository }}
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        run: |
          ${{ env.GITHUB_WORKSPACE }}/sources/.github/scripts/common_ssh_configure.sh
      - name: Deploy on test
        id: deploy
        env:
          IDENTITY_FEDERATION_PROJECT_NUMBER: ${{ secrets.identity_federation_project_number }}
          IDENTITY_FEDERATION_POOL: ${{ secrets.identity_federation_pool }}
          IDENTITY_FEDERATION_PROVIDER: ${{ secrets.identity_federation_provider }}
          GCP_BUCKET_REPOSITORY: ${{ secrets.gcp_bucket_repository }}
          SUFFIX_NAME: ${{ needs.init.outputs.sha7 }}
        run: |
          ${{ env.GITHUB_WORKSPACE }}/sources/.github/scripts/terraform_deploy.sh
      - name: Clean environment
        id: clean
        env:
          IDENTITY_FEDERATION_PROJECT_NUMBER: ${{ secrets.identity_federation_project_number }}
          IDENTITY_FEDERATION_POOL: ${{ secrets.identity_federation_pool }}
          IDENTITY_FEDERATION_PROVIDER: ${{ secrets.identity_federation_provider }}
          GCP_BUCKET_REPOSITORY: ${{ secrets.gcp_bucket_repository }}
          SUFFIX_NAME: ${{ needs.init.outputs.sha7 }}
        if: always()
        run: |
          ${{ env.GITHUB_WORKSPACE }}/sources/.github/scripts/terraform_clean.sh
